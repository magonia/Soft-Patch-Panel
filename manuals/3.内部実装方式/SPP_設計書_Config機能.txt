■内部管理情報(コンフィグ情報)
下記の括弧内のアルファベットの名称はコンフィグ上の名称。
・MAC振り分けテーブル
　・テーブル名称(name)
　・テーブルデータ数(tableの要素数)
　・テーブル(table)　※配列
　　・ポート(port)
　　　・IF種別
　　　・IF番号
　　・MACアドレス文字列(mac)
　　・MACアドレス数値
　　※MACアドレスは、コンフィグから取得した文字列データと
　　　数値変換したデータの2つを保持する予定。
・プロセス情報(nfvs)　※配列
　・プロセス名称(name)
　・VHOST数(num_vhost)
　・RING数(num_ring)
　・各コア情報(functions)
　　・コア番号(core)
　　・処理種別(type) ※classifier_mac/merge/forward
　　・受信ポート(rx_port)　※配列
　　　・IF種別
　　　・IF番号
　　・送信ポート(tx_port)　※配列
　　　・IF種別
　　　・IF番号
■固定文字列
・コンフィグパス(/usr/local/etc/spp/nfv.json)
■バリデーション
・MACアドレスは数値変換時に形式チェックを行う予定。
・ポート情報(ring0など)はIF種別と番号に分解の処理がフォーマットチェックになる予定。
■Json形式のデータから文字列データ取得
※以前のSPP開発で作成した処理を流用予定。
パラメータは、下記3つの予定。
①コンフィグファイルのJsonオブジェクト
②コンフィグ内の取得したパラメータ名
③取得成功時に返却するOUTパラメータ
・コンフィグファイルのJsonオブジェクトから、パラメータ名で欲しいデータのJsonオブジェクトを取得(json_path_get)
　・エラーの場合、エラー終了(ログはデバッグのみ)
・Jsonオブジェクトが文字列かチェック(json_is_string)
　・エラーの場合、エラー終了(ログはデバッグのみ)
・Jsonオブジェクトからデータを取得(json_string_value)し、OUTパラメータにコピー
　※型チェック済みの為、エラーにならないはず。
■Json形式のデータから数値データ取得
※以前のSPP開発で作成した処理を流用予定。
パラメータは、下記3つの予定。
①コンフィグファイルのJsonオブジェクト
②コンフィグ内の取得したパラメータ名
③取得成功時に返却するOUTパラメータ
・コンフィグファイルのJsonオブジェクトから、パラメータ名で欲しいデータのJsonオブジェクトを取得(json_path_get)
　・エラーの場合、エラー終了(ログはデバッグのみ)
・Jsonオブジェクトが数値かチェック(json_is_integer)
　・エラーの場合、エラー終了(ログはデバッグのみ)
・Jsonオブジェクトからデータを取得(json_integer_value)し、OUTパラメータへ設定
　※型チェック済みの為、エラーにならないはず。
■コンフィグファイル読み込み
・コンフィグファイルパスのファイルをJson形式で読み込む(json_load_file)
　・エラーの場合は、エラー返却
・MAC振り分けテーブル格納
　・エラーの場合は、エラー返却
・プロセス情報格納
　・エラーの場合は、エラー返却
■MAC振り分けテーブル格納
・コンフィグファイルのJsonオブジェクトから、MAC振り分けテーブル(classifier_table)のJsonオブジェクトを取得
　・エラーの場合は、エラー返却
・テーブル名称(name)を内部管理情報(コンフィグ情報)に設定
　・エラーの場合は、エラー返却
・テーブル(table)の要素数取得(json_array_size)
　・要素数が0の場合は、エラー返却
・テーブル(table)のデータ取得(json_array_get)
　・エラーの場合は、エラー返却
・テーブル(table)の要素数分、、データを取得し、内部管理情報(コンフィグ情報)に設定する
　・ポート(port)を取得し、IF種別と通し番号に分割して設定
　　・エラーの場合は、エラー返却
　・MACアドレスをMACアドレス文字列(mac)に設定
　・MACアドレス文字列(mac)に設定したデータを数値に変換してMACアドレス数値へも設定
　　・エラーの場合は、エラー返却
■関数：プロセス情報格納
・コンフィグファイルのJsonオブジェクトから、プロセス情報(nfvs)のJsonオブジェクトを取得
　・エラーの場合は、エラー返却
・プロセス情報(nfvs)の要素数を取得(json_array_size)
　・要素数が0の場合は、エラー返却
・プロセス情報(nfvs)のデータ取得(json_array_get)
　・エラーの場合は、エラー返却
・プロセス情報(nfvs)の要素数分、データを取得し、内部管理情報(コンフィグ情報)に設定する
　・プロセス名称(name)を設定
　　・エラーの場合は、エラー返却
　・VHOST数(num_vhost)を設定
　　・エラーの場合は、エラー返却
　・RING数(num_ring)を設定
　　・エラーの場合は、エラー返却
　・各コア情報(functions)の要素数を取得(json_array_size)
　　・要素数が0の場合は、エラー返却
　・各コア情報(functions)のデータ取得(json_array_get)
　　・エラーの場合は、エラー返却
　　・各コア情報(functions)の要素数分、データを取得し、内部管理情報(コンフィグ情報)に設定する
　　　・コア番号(core)を設定
　　　　・エラーの場合は、エラー返却
　　　・処理種別(type)を設定
　　　　・エラーの場合は、エラー返却
　　　・処理種別(type)がmergeの場合
　　　　・受信ポート(rx_port)が配列型かチェック(json_is_array)
　　　　　・配列型以外の場合は、エラー返却
　　　　・受信ポート(rx_port)の要素数を取得(json_array_size)
　　　　　・要素数が0の場合は、エラー返却
　　　　・受信ポート(rx_port)の各要素を取得し、IF種別と通し番号に分割して設定
　　　　　・エラーの場合は、エラー返却
　　　・処理種別(type)がmerge以外の場合
　　　　・受信ポート(rx_port)を取得し、IF種別と通し番号に分割して設定
　　　　　・エラーの場合は、エラー返却
　　　・処理種別(type)がmergeかforwardの場合
　　　　・送信ポート(tx_port)を取得し、IF種別と通し番号に分割して設定
　　　　・エラーの場合は、エラー返却
　　　・処理種別(type)がmergeとforward以外の場合
　　　　・送信ポートテーブル(tx_port_table)があった場合、MAC振り分けテーブルのテーブル名称に同じ名称があるかチェック
　　　　　・MAC振り分けテーブルのテーブル名称に同じ名称があった場合は、MAC振り分けテーブルに所属する全ポートの情報を送信ポートとして設定
　　　　　・MAC振り分けテーブルのテーブル名称に同じ名称がなかった場合は、エラーを返却
