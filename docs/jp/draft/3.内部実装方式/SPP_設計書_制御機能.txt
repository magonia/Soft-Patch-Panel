■起動パラメータ
sudo /usr/local/bin/spp_vf -c 使用可能なCPUのbitmap -n メモリチャネル数 --proc-type=プロセスタイプ(spp_vfはsecondary固定)

例)
sudo /usr/local/bin/spp_vf -c 0xfe -n 4 --proc-type=secondary
※Classifier×1、Merge×1、Forward×4の場合、CPUは各機能部で6個とメインプロセス用で1個で計7個使用する。
　(補足：実際に使用する場合、性能を出すには、CPUの指定にNUMA等の考慮も必要。)
※メモリチャネル数は環境に合わせること。

■内部管理情報(想定)
・コンフィグ情報(コンフィグから読みだした情報を保持)
・各IF情報(各IF毎の情報を保持)
　・NIC情報
　　・DPDKポート番号(0起算)
　　・MACアドレス
　・RING情報
　　・DPDKポート番号(0起算)
　　・MACアドレス
　・VHOST情報
　　・DPDKポート番号(0起算)
　　・MACアドレス
　※現状、RING以外はMACアドレスを使用しない予定だが、定義を分ける必要もないので、
　　NICやVHOSTもMACアドレスの領域を用意。
・各コア情報(各コア毎の情報を保持)
　・処理種別(classifier_mac/merge/forward)
　・スレッド状態(停止中/空転中/転送中/停止依頼中)
　・受信ポート
　　・IF種別
　　・IF番号(0起算)
　　・DPDKポート番号(0起算)
　　・MACアドレス
　・送信ポート
　　・IF種別
　　・IF番号(0起算)
　　・DPDKポート番号(0起算)
　　・MACアドレス
　※DPDKポート番号とMACアドレスが2重管理になって見えるが、
　　各コアから各IFを毎回見に行かなくて済む様に保持。
　　管理自体は各IF情報で行う予定。
・その他(起動パラメータから取得したノードIDやspp.pyのアクセス情報も必要)
■メインプロセス以外のスレッドで参照するデータ
・内部管理情報(各コア情報)
■プロセス制御(main)
・daemon設定　※daemon起動可能にする設定を追加。コンパイルオプションで切り替え。
・シグナルハンドル(SIGINT/SIGTERM)
・config読み込み　※バリデーションや内部管理情報(コンフィグ情報)への格納まで含む
　・エラー時はプロセス異常終了
・起動パラメータチェック
　・エラー時はプロセス異常終了
・DPDK初期化(rte_eal_init起動)
　・エラー時はプロセス異常終了
・各IF情報設定
　・エラー時はプロセス異常終了
・他機能部の初期化 ※必要があれば。
　・エラー時はプロセス異常終了
・スレッド起動(rte_eal_remote_launch)
　・エラー時はプロセス異常終了
・スレッド状態確認(パラメータは空転中を指定)
　・エラー時はプロセス異常終了
・転送状態を開始に設定
・空ループ　※ログ機能ONの場合は、RING滞留時間の収集結果出力
　※以降空転
・終了処理
　・転送状態を停止に設定
　・各スレッド状態を停止依頼中に設定
　・スレッド状態確認(パラメータは停止中を指定)
　・spp.pyとのソケットクローズ
■シグナル受付時の処理
・転送状態を停止に設定
・各スレッド状態を停止に設定
・エラーは発生しない予定。
■起動パラメータチェック
・-cから使用可能なCPU数とCPU番号を内部管理情報(各コア情報)に設定
　・-cから取得したCPU番号がconfigと一致しなければ、エラーを返却
■各IF情報設定
・rte_eth_dev_countを元にNICの情報を内部管理情報(各IF情報)に設定
　・NICが0の場合は、エラーを返却
・コンフィグのnum_ring分、add_ring_pmdを実行し、内部管理情報(各IF情報)にDPDKポートを保持
　・エラー時はそのままエラーを返却
・コンフィグのnum_vhost分、add_vhost_pmdを実行し、内部管理情報(各IF情報)にDPDKポートを保持
　・エラー時はそのままエラーを返却
・コンフィグのclassifier_tableの情報を参照し、内部管理情報(各IF情報)にMACアドレスを設定
　・classifier_tableがない場合は、エラーを返却
・コンフィグのfunctionsの情報を参照し、処理種別と送受信ポートの情報から、
　内部管理情報(各コア情報)を設定する。
　※送受信ポートの情報は、内部管理情報(各IF情報)からも情報を取得して設定する。
　・各コアで使用する情報にDPDKポート番号がなければ、エラーを返却
　・classifier_macのRINGにMACアドレスがなければ、エラーを返却
■スレッド状態確認
※内部管理情報に各スレッド毎の状態を用意
・パラメータで指定された状態と各スレッド毎の状態が一致するか確認
・全スレッドの状態が一致しなかった場合は、1秒おきに5回確認する
・5回確認して状態が一致しなかった場合は、エラーを返却
