■概要
本テキストは、Jansson用のjson_path_get関数をSPPで使用しない様に修正し、
Janssonのパッケージ(libjansson-dev)で提供されているバイナリで動作させる事が目的となる。

SPPでjson_path_getを使用しない様にする修正の方法として2種類あり、それぞれ下記の様な修正内容が必要となる。
なお、一番大きな修正内容が、両方ともjson_path_getを他関数へ置き換える修正となる為、修正量はほぼ同じとなる。
①json_path_getをjson_object_getに置き換える。
　修正内容　：json_path_getを使用している箇所をjson_object_getに置き換える。
　　　　　　　json_path_getの第二引数に指定する文字列がそのまま使用できない為、文字列も変更する。(spp_config.cの先頭にあるJSONPATH_から始まるdefine)
　　　　　　　CUNITのソースでjson_path_getの使用箇所をjson_object_getで動作する用に修正する。
②json_path_getと同様の処理を行う代替関数を作成し、json_path_getと置き換える。
　修正内容　：json_path_getの代替関数を作成する。
　　　　　　　json_path_getを使用している箇所を新関数に置き換える。
　　　　　　　CUNITに新関数用のソースを追加する。json_path_getを使用している箇所を新関数に置き換える。

現時点ではどちらを選んでも差はほとんどない為、今回は②の修正を行う方針とする。

■json_path_getの代替関数
代替関数であり、json_path_getを使用している箇所へ、置き換える形で使用する為、
パラメータと戻り値は同じとする必要がある。

[制限]
・パラメータ2へ設定可能な文字列は1024までとする。(json_path_getは動的バッファを取得しているので、差分となる。)
・パラメータ2へ設定する文字列の記述形式は、json_path_getと同じとする。
　(文字列の先頭は'$'から始まり、パラメータ名称の上層と下層は'.'でつなぎ、配列の要素を取得したい場合はパラメータ名称の後に'[要素番号]'を付ける。)

[パラメータ]
パラメータ1：Jsonオブジェクトのアドレス
パラメータ2：Json形式でのパス

[戻り値]
OK：パラメータ2で指定したパスのJsonオブジェクトのアドレス
NG：NULL

[大まかな処理]
パラメータ2の文字列を'.'で分解し、分解した各文字列で、
'[]'が無い場合はjson_object_get、'[]'がある場合はjson_array_getを使用してJsonオブジェクトを取得していき、
最後に取得したJsonオブジェクトのアドレスを返却する。
途中でエラーとなった場合はNULLを返却する。

■修正箇所
下記にjson_path_getを使用している箇所を記載する。
下記以外でのソース修正は、新規部分となり、json_path_getの代替関数と、代替関数をチェックする為のCUNITのソースとなる。

・SPP側
src/vf/spp_config.c:34: json_t *tmp_obj = json_path_get(obj, path);
src/vf/spp_config.c:61: json_t *tmp_obj = json_path_get(obj, path);
src/vf/spp_config.c:207:        json_t *classifier_obj = json_path_get(obj, JSONPATH_CLASSIFIER_TABLE);
src/vf/spp_config.c:222:        json_t *array_obj = json_path_get(classifier_obj, JSONPATH_TABLE);
src/vf/spp_config.c:341:                json_t *array_obj = json_path_get(obj, JSONPATH_RX_PORT);
src/vf/spp_config.c:457:                json_t *table_obj = json_path_get(obj, JSONPATH_TX_TABLE);
src/vf/spp_config.c:476:                        json_t *array_obj = json_path_get(obj, JSONPATH_TX_PORT);
src/vf/spp_config.c:548:        json_t *proc_table_obj = json_path_get(obj, JSONPATH_PROC_TABLE);
src/vf/spp_config.c:602:        json_t *array_obj = json_path_get(proc_obj, JSONPATH_FUNCTIONS);

・CUNIT側
test/spp_config/spp_config_test.c:647:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:678:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:705:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[5]");
test/spp_config/spp_config_test.c:732:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:756:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:780:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:804:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:828:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:852:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:876:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:900:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[0]");
test/spp_config/spp_config_test.c:929:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:958:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[2]");
test/spp_config/spp_config_test.c:987:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:1024:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[7]");
test/spp_config/spp_config_test.c:1050:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[6]");
test/spp_config/spp_config_test.c:1076:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:1111:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:1146:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:1174:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:1202:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:1230:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:1258:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
test/spp_config/spp_config_test.c:1286:    json_t *functions_obj = json_path_get(obj, "$.vfs[0].functions[3]");
